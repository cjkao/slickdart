{"name":"Slickdart","tagline":"dart - slickgrid port","body":"slickdart\r\n=========\r\n\r\nslick grid port, not for mobile device\r\n\r\nSort performance is not expected in javascript version\r\n\r\nParameter Description\r\n=======================\r\n\r\n* When enable 'selectActiveRow' on row selection model and with CheckboxSelectColumn in first row\r\n  click on first column out side of check box will uncheck other rows if multiple row selected\r\n\r\n\r\nExample\r\n=========================\r\n* examples in web/example folder\r\n\r\nsimple.dart\r\n    import 'dart:html';\r\n    import 'package:slickdart/slick_grid.dart' as grid;\r\n    import 'dart:math' as math;\r\n    \r\n    void main() {\r\n      var g=init();\r\n      g.init();\r\n      print (g.$headerScroller.querySelectorAll('.slick-header-column').length);\r\n    }\r\n    \r\n    grid.SlickGrid init(){\r\n      Element el =querySelector('#grid');\r\n      List column = [\r\n         new grid.Column.fromMap ({'id': \"title\", 'name': \"Title1\", 'field': \"title\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"duration\", 'width':120,'name': \"percentComplete2\", 'field': \"percentComplete\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"%\", 'name': \"start3\", 'field': \"start\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"start\", 'name': \"4finish\", 'field': \"finish\"}),\r\n         new grid.Column.fromMap ({'id': \"title2\", 'name': \"5Title1\", 'field': \"title\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"duration2\",'width':120, 'name': \"6pppppppplete\", 'field': \"percentComplete\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"%2\", 'name': \"7start\", 'field': \"start\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"start2\", 'name': \"8finish\", 'field': \"finish\"}),\r\n         new grid.Column.fromMap ({'id': \"start2\", 'name': \"9finish\", 'field': \"finish\"}),\r\n         new grid.Column.fromMap ({'id': \"title2\", 'name': \"10 Title1\", 'field': \"title\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"duration2\",'width':120, 'name': \"11 percentComplete\", 'field': \"percentComplete\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"%2\", 'name': \"12 start\", 'field': \"start\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"start2\", 'name': \"13 finish\", 'field': \"finish\"}),\r\n         new grid.Column.fromMap ({'id': \"title2\", 'name': \"14 Title1\", 'field': \"title\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"duration2\",'width':120, 'name': \"15 percentComplete\", 'field': \"percentComplete\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"%2\", 'name': \"16 start\", 'field': \"start\", 'sortable': true }),\r\n         new grid.Column.fromMap ({'id': \"start2\", 'name': \"17 finish\", 'field': \"finish1\"}),\r\n         new grid.Column.fromMap ({'id': \"start2\", 'name': \"18 finish\", 'field': \"finish2\"}),\r\n         new grid.Column.fromMap ({'id': \"start2\", 'name': \"19 finish\", 'field': \"finish3\"}),\r\n         new grid.Column.fromMap ({'id': \"start2\", 'name': \"20 finish\", 'field': \"finish4\"})\r\n      ];\r\n      List data=[];\r\n      for (var i = 0; i < 50000; i++) {\r\n        data.add( {\r\n          'title':  new math.Random().nextInt(100).toString(),\r\n          'duration': new math.Random().nextInt(100).toString(),\r\n          'percentComplete': new math.Random().nextInt(10) * 100,\r\n          'start': \"01/01/2009\",\r\n          'finish': \"01/05/2009\",\r\n          'finish1': \"01/05/2009 $i\",\r\n          'finish2': \"01/05/20$i\",\r\n          'finish3': \"01/05/201$i\",\r\n          'finish4': \"01/05/202$i\",\r\n          'effortDriven': (i % 5 == 0)\r\n        });\r\n      }\r\n      Map opt = {'explicitInitialization': false,\r\n                 'multiColumnSort': false,\r\n                 'frozenColumn': 0,\r\n                 'frozenRow': 1,\r\n      };\r\n      grid.SlickGrid sg= new grid.SlickGrid(el,data,column,opt);\r\n      sg.onSort.subscribe( (e, args) {\r\n        grid.Column col = args['sortCol'];\r\n        data.sort( (dataRow1, dataRow2) {\r\n            var field = col.field;\r\n            var sign = args['sortAsc'] ? 1 : -1;\r\n            dynamic value1 = dataRow1[field], value2 = dataRow2[field];\r\n            var result = (value1 == value2 ? 0 : (value1.compareTo(value2)>0 ? 1 : -1)) * sign;\r\n            if (result != 0) {\r\n              return result;\r\n            }\r\n          return 0;\r\n        });\r\n        sg.invalidate();\r\n        sg.render();\r\n      });\r\n      return sg;\r\n    }\r\n        \r\nsimple.html\r\n\r\n    <!DOCTYPE html>    \r\n    <html>\r\n      <head>\r\n        <meta charset=\"utf-8\">\r\n        <title>Slickdart</title>\r\n        <link rel=\"stylesheet\" href=\"slickdart.css\">\r\n         <link rel=\"stylesheet\" href=\"packages/slickdart/slick.grid.css\" type=\"text/css\"/>\r\n         <link rel=\"stylesheet\" href=\"packages/slickdart/slick_default_theme.css\" type=\"text/css\"/>\r\n         <link rel=\"stylesheet\" href=\"simple.css\" type=\"text/css\"/>\r\n      </head>\r\n      <body>    \r\n          <div style=\"width:600px;\">\r\n            <div class=\"grid-header\" style=\"width:100%\">\r\n                <label>Santa's TODO list:</label>\r\n            </div>\r\n            <div id=\"grid\" style=\"width:100%;height:500px;\"></div>\r\n          </div>   \r\n        <script type=\"application/dart\" src=\"simple.dart\"></script>\r\n        <script src=\"packages/browser/dart.js\"></script>\r\n      </body>\r\n    </html>\r\n\r\n\r\nTODO\r\n========================\r\n\r\n\r\n* [x] Frozen column\r\n* [] multiple column row\r\n* [x] Resize column\r\n* [] Column reorder","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}